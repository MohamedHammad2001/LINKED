#include <iostream>
using namespace std;
class Node {
public:
    char data;
    Node* next;
};
int main() {
    // declaration
    Node* M1 = new Node();
    Node* M2 = new Node();
    Node* M3 = new Node();
    Node* M4 = new Node();
    Node* M5 = new Node();

    Node* H1 = new Node();
    Node* H2 = new Node();
    Node* H3 = new Node();
    Node* H4 = new Node();
    Node* H5 = new Node();
    Node* H6 = new Node();

    Node* M6 = new Node();
    Node* M7 = new Node();
    Node* M8 = new Node();
    Node* M9 = new Node();
    Node* M10 = new Node();


    Node* D1 = new Node();
    Node* D2 = new Node();
    Node* D3 = new Node();
    Node* D4 = new Node();
    


   
    // implementation

    M1->data = 'M';
    M1->next = M2;
    M2->data = 'M';
    M2->next = M3;
    M3->data = 'M';
    M3->next = M4;
    M4->data = 'M';
    M4->next = M5;
    M5->data = 'M';
    M5->next = nullptr;

    

    
   
   

    

    H1->data = 'H';
    H1->next = H2;
    H2->data = 'H';
    H2->next = H3;
   H3->data = 'H';
    H3->next = H4;
    H4->data = 'H';
    H4->next = H5;
    H5->data = 'H';
    H5->next = H6;
    H6->data = 'H';
    H6->next = nullptr;


    M6->data = 'M';
    M6->next = M6;
    M7->data = 'M';
    M7->next = M7;
    M8->data = 'M';
    M8->next = M8;
    M9->data = 'M';
    M9->next = M9;
    M10->data = 'M';
    M10->next = nullptr;

  
    D1->data = 'D';
    D1->next = D2;
    D2->data = 'D';
    D2->next = D3;
    D3->data = 'D';
   D3->next = D4;
    D4->data = 'D';
    D4->next = nullptr;
    }
